#+STARTUP: overview

* Interface Tweaks

#+BEGIN_SRC emacs-lisp
(setq inhibit-startup-message t)
(tool-bar-mode -1)
(fset 'yes-or-no-p 'y-or-n-p)
#+END_SRC

* Themes and Font
Note: For some reaseon I get an error with use-package and spacemacs-theme. So I installed the package manually.
#+BEGIN_SRC emacs-lisp
(load-theme 'spacemacs-dark t)

(set-face-attribute 'default nil :height 90) ;; set default font size to 9 pt
#+END_SRC

* Magit
#+BEGIN_SRC emacs-lisp
(use-package magit
  :init
  ;; Disable emacs internal version control
  (setq vc-handled-backends nil))

;; Opens the status popup (like git status)
(global-set-key (kbd "C-x g") 'magit-status)
#+END_SRC

* Keys
** CUA Mode
#+BEGIN_SRC emacs-lisp
(cua-mode t)
(setq cua-paste-pop-rotate-temporarily t)
#+END_SRC

** Custom bindings
Note that bindings for imported packages are found in the corresponding section and not here

#+BEGIN_SRC emacs-lisp
;; Toggle visual line mode (warp lines nicely)
(global-set-key (kbd "<f12>") 'visual-line-mode)

;; Refresh with F5
(global-set-key (kbd "<f5>") 'revert-buffer)

;; Show buffer-menu instead of list-buffers
(global-set-key (kbd "C-x C-b") 'buffer-menu)

;; Kill-this-buffer (no prompting for name)
(global-set-key (kbd "C-w") 'kill-this-buffer)

;; No need for C-j anymore
(define-key global-map (kbd "RET") 'newline-and-indent)

;; Kill whole line
(global-set-key (kbd "C-S-k") 'kill-whole-line)

;; Scrolling
(global-set-key "\M-n"  (lambda () (interactive) (scroll-up   4)) )
(global-set-key "\M-p"  (lambda () (interactive) (scroll-down 4)) )

;; Comment or uncomment region or line
;(global-set-key (kbd "C-/") 'sensible-defaults/comment-or-uncomment-region-or-line)

;; Duplicate line or region
(load-library "duplicate-line-or-region")
(global-set-key (kbd "C-S-n") 'duplicate-line-or-region)
(global-set-key (kbd "C-S-p") 'duplicate-line-or-region)

;; MOVE line or region up/down
(load-library "move-lines")
(global-set-key (kbd "C-M-n") 'move-lines-down)
(global-set-key (kbd "C-M-p") 'move-lines-up)

;; MOVE to different window
(define-key org-mode-map (kbd "M-h") nil) ;; unbind from orgmode first
(global-set-key (kbd "M-h") 'windmove-left)
(global-set-key (kbd "M-l") 'windmove-right)
(global-set-key (kbd "M-j") 'windmove-down)
(global-set-key (kbd "M-k") 'windmove-up)

;; SWAP buffers/frames (got this from https://github.com/lukhas/buffer-move)
;; (load-library "buffer-move")
;; (global-set-key (kbd "<C-left>") 'buf-move-left)
;; (global-set-key (kbd "<C-right>") 'buf-move-right)
;; (global-set-key (kbd "<C-down>") 'buf-move-down)
;; (global-set-key (kbd "<C-up>") 'buf-move-up)

;; Org-mode keybindings
;; These are necessary according to http://orgmode.org/worg/org-faq.html
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-co" 'org-iswitchb) ;; NOTE: did not use default because of clash

;; Don't like using the arrow keys
(global-set-key (kbd "C-M-l") 'org-metaright)
(global-set-key (kbd "C-M-h") 'org-metaleft)

;; eyebrowse
;(global-set-key (kbd "C-9") 'eyebrowse-prev-window-config)
;(global-set-key (kbd "C-0") 'eyebrowse-next-window-config)
#+END_SRC

* which key
Brings up some help

#+BEGIN_SRC emacs-lisp
(use-package which-key
:ensure t 
:config
(which-key-mode))
#+END_SRC
